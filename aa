(CplaceJSDocs) Found plugins with jsdoc: cf.cplace.platform
Collecting docs from plugins...
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":0,"first":true,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":1,"first":false,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":2,"first":false,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":3,"first":false,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":4,"first":false,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":5,"first":false,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":6,"first":false,"last":false},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":7,"first":false,"last":true},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"key":1,"index":1,"first":false,"last":false},"key":1,"index":1,"first":false,"last":false,"prefix":"","parent":"platformUtilities","accessSymbol":".","name":"findGroupByName","methodSign":"(groupName)","returnSymbol":"⇒","returnTypes":["Group"],"suffix":"","depOpen":null,"depClose":null,"codeOpen":null,"codeClose":null},"key":0,"index":0,"first":true,"last":true,"prefix":"","parent":"platformUtilities","accessSymbol":".","name":"findGroupByName","methodSign":"(groupName)","returnSymbol":"⇒","returnTypes":["Group"],"suffix":"","depOpen":null,"depClose":null,"codeOpen":null,"codeClose":null},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":1,"first":false,"last":false},"index":1,"first":false,"last":false,"prefix":"","parent":"platformUtilities","accessSymbol":".","name":"findGroupByName","methodSign":"(groupName)","returnSymbol":"⇒","returnTypes":["Group"],"suffix":"","depOpen":null,"depClose":null,"codeOpen":null,"codeClose":null},"index":0,"first":true,"last":true,"prefix":"","parent":"platformUtilities","accessSymbol":".","name":"findGroupByName","methodSign":"(groupName)","returnSymbol":"⇒","returnTypes":["Group"],"suffix":"","depOpen":null,"depClose":null,"codeOpen":null,"codeClose":null,"key":0},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
{"name":"link","hash":{},"data":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}],"_parent":{"root":[{"id":"CustomEntity","longname":"CustomEntity","name":"CustomEntity","kind":"class","scope":"global","description":"<p>Base class of all entities with custom attributes.</p>","hideconstructor":true,"meta":{"lineno":6,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":14,"level":0},{"id":"Group","longname":"Group","name":"Group","kind":"class","scope":"global","hideconstructor":true,"augments":["CustomEntity"],"description":"<p>{@link CustomEntity} representing a group of persons.</p>","meta":{"lineno":11,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":22,"level":0},{"id":"PlatformUtilities","longname":"PlatformUtilities","name":"PlatformUtilities","kind":"class","scope":"global","description":"<p>cplaceJS utilities provided by the platform</p>","hideconstructor":true,"type":{"names":["Utilities"]},"meta":{"lineno":12,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":24,"level":0},{"id":"cplace","longname":"cplace","name":"cplace","kind":"namespace","scope":"global","description":"<p>A global object that provides utility methods for cplaceJS.\nThis is available in every cplaceJS script.</p>","params":[],"meta":{"lineno":6,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":5},{"id":"mappingFunction","longname":"mappingFunction","name":"mappingFunction","kind":"typedef","scope":"global","description":"<p>Transformation function that maps data.</p>","params":[{"type":{"names":["*"]},"description":"<p>the item to transform.</p>","name":"item"}],"returns":[{"type":{"names":["*"]},"description":"<p>The transformed item.</p>"}],"type":{"names":["function"]},"meta":{"lineno":122,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":0},{"id":"iteratingFunction","longname":"iteratingFunction","name":"iteratingFunction","kind":"typedef","scope":"global","description":"<p>A function that performs an operation on an provided item.\nUsually used in loops over iterables, e.g. in cplace.each</p>","params":[{"type":{"names":["*"]},"description":"<p>an item from to perform the operation on.</p>","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>false</code> to interrupt the loop <code>undefined</code> else (no return statement is sufficient).</p>"}],"type":{"names":["function"]},"meta":{"lineno":129,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":1},{"id":"Actions","longname":"Actions","name":"Actions","kind":"typedef","scope":"global","description":"<p>Special functions that can be called from cplaceJS code. Actions are generally used to modify an entity in cplace.</p>","type":{"names":["Object"]},"see":["PlatformActions"],"meta":{"lineno":137,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":2},{"id":"Utilities","longname":"Utilities","name":"Utilities","kind":"typedef","scope":"global","description":"<p>Special utility functions that can be called from cplaceJS code. Utilities do NOT modify entities in cplace.</p>","type":{"names":["Object"]},"see":["PlatformUtilities"],"meta":{"lineno":144,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":3},{"id":"ArrayLike","longname":"ArrayLike","name":"ArrayLike","kind":"typedef","scope":"global","description":"<p>An object containing other objects which can be iterated over.\nThis can be an Array, a List or a Set for example.</p>","type":{"names":["*"]},"customTags":[{"tag":"template","value":"T"}],"meta":{"lineno":151,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":4},{"id":"CustomEntity#exists","longname":"CustomEntity#exists","name":"exists","kind":"function","scope":"instance","description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":15,"level":0},{"id":"CustomEntity#getId","longname":"CustomEntity#getId","name":"getId","kind":"function","scope":"instance","description":"<p>Get the UID of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":16,"level":0},{"id":"CustomEntity#getName","longname":"CustomEntity#getName","name":"getName","kind":"function","scope":"instance","description":"<p>Get the name of the entity</p>","memberof":"CustomEntity","params":[],"examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":17,"level":0},{"id":"CustomEntity#getAttributeDisplayName","longname":"CustomEntity#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":18,"level":0},{"id":"CustomEntity#get","longname":"CustomEntity#get","name":"get","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":19,"level":0},{"id":"CustomEntity#getOptional","longname":"CustomEntity#getOptional","name":"getOptional","kind":"function","scope":"instance","description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":20,"level":0},{"id":"CustomEntity#getBuiltinFeatureValue","longname":"CustomEntity#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","description":"<p>Get value of a builtin feature.</p>","memberof":"CustomEntity","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":21,"level":0},{"id":"Group#getAllActiveUsers","longname":"Group#getAllActiveUsers","name":"getAllActiveUsers","kind":"function","scope":"instance","description":"<p>Get a flat list of all persons who are directly or transitively members of this group.</p>","memberof":"Group","params":[],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');\rif (myGroup) {\r    var members = myGroup.getAllActiveUsers();\r    cplace.each(members, function(m) {\r        cplace.log(m.getName());\r    })\r }"],"returns":[{"type":{"names":["ArrayLike.<Person>"]},"description":"<p>A collections of persons which are members of this group</p>"}],"meta":{"lineno":26,"filename":"Group.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":23,"level":0},{"id":"PlatformUtilities#getCurrentUser","longname":"PlatformUtilities#getCurrentUser","name":"getCurrentUser","kind":"function","scope":"instance","description":"<p>Get the currently logged in user.</p>","memberof":"PlatformUtilities","params":[],"examples":["var currentUser = cplace.utils().getCurrentUser();"],"returns":[{"type":{"names":["Person"]},"description":"<p>Current user or null if there is no logged in user</p>"}],"meta":{"lineno":21,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":25,"level":0},{"id":"PlatformUtilities#findGroupByName","longname":"PlatformUtilities#findGroupByName","name":"findGroupByName","kind":"function","scope":"instance","description":"<p>Find a group by its name</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of the group</p>","name":"groupName"}],"examples":["var myGroup = cplace.utils().findGroupByName('myUserGroup');"],"returns":[{"type":{"names":["Group"]},"description":"<p>wrapped group or null if not found</p>"}],"meta":{"lineno":32,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":26,"level":0},{"id":"PlatformUtilities#getAllUsersGroup","longname":"PlatformUtilities#getAllUsersGroup","name":"getAllUsersGroup","kind":"function","scope":"instance","description":"<p>Get the allUsersGroup system group</p>","memberof":"PlatformUtilities","params":[],"examples":["var allUsersGroup = cplace.utils().getAllUsersGroup();"],"returns":[{"type":{"names":["SystemGroup"]},"description":"<p>wrapped system group of allUsersGroup</p>"}],"meta":{"lineno":42,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":27,"level":0},{"id":"PlatformUtilities#findUserByLogin","longname":"PlatformUtilities#findUserByLogin","name":"findUserByLogin","kind":"function","scope":"instance","description":"<p>Find a user by login</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>login of the user</p>","name":"login"}],"examples":["var maxMustermann = cplace.utils().findUserByLogin('mustermann@test.tricia');"],"returns":[{"type":{"names":["Person"]},"description":"<p>wrapped person or null if not found</p>"}],"meta":{"lineno":53,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":28,"level":0},{"id":"PlatformUtilities#getSpaceIdByName","longname":"PlatformUtilities#getSpaceIdByName","name":"getSpaceIdByName","kind":"function","scope":"instance","description":"<p>Returns spaceUid for provided spaceName</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of space</p>","name":"spaceName"}],"returns":[{"type":{"names":["string"]},"description":"<p>spaceUid if space with spaceName is found, null otherwise</p>"}],"meta":{"lineno":61,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":29,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName.</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName');"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":72,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":30,"level":0},{"id":"PlatformUtilities#getPagesByName","longname":"PlatformUtilities#getPagesByName","name":"getPagesByName","kind":"function","scope":"instance","description":"<p>Returns all pages for provided pageName and options</p>","memberof":"PlatformUtilities","params":[{"type":{"names":["string"]},"description":"<p>name of page</p>","name":"pageName"},{"type":{"names":["JSON"]},"optional":true,"description":"<p>options to use when searching pages</p>","name":"options"}],"examples":["var pages = cplace.utils().getPagesByName('myPageName', {\r     space: ['space1uid', 'space2uid'],\r     customType: ['type1name', 'type2name']\r});","// Options must only be provided if results should be filtered by them.\r// In case of only one space or type, no array is needed.\rvar pages = cplace.utils().getPagesByName('myPageName', {\r    space: 'space1uid'\r});"],"returns":[{"type":{"names":["ArrayLike.<Page>"]},"description":"<ul>\n<li>Iterable of pages</li>\n</ul>"}],"meta":{"lineno":95,"filename":"PlatformUtilities.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":31,"level":0},{"id":"Group#exists","longname":"Group#exists","name":"exists","kind":"function","scope":"instance","inherits":"CustomEntity#exists","inherited":true,"description":"<p>Check, whether the entity referenced by this object exists.</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rif (page.exists()) {\r  // do something\r}"],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if object references an existing entity, <code>false</code> otherwise</p>"}],"meta":{"lineno":18,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":32,"level":0},{"id":"Group#getId","longname":"Group#getId","name":"getId","kind":"function","scope":"instance","inherits":"CustomEntity#getId","inherited":true,"description":"<p>Get the UID of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar id = page.getId(); // Get UID of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>UID of wrapped entity or null if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":29,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":33,"level":0},{"id":"Group#getName","longname":"Group#getName","name":"getName","kind":"function","scope":"instance","inherits":"CustomEntity#getName","inherited":true,"description":"<p>Get the name of the entity</p>","memberof":"Group","examples":["// page is a reference to a custom entity of type page\rvar name = page.getName(); // Get name of the page. Will be null if page does not reference an existing entity"],"returns":[{"type":{"names":["string"]},"description":"<p>name of the entity. <code>null</code> if this object does not refer to an existing entity.</p>"}],"meta":{"lineno":40,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":34,"level":0},{"id":"Group#getAttributeDisplayName","longname":"Group#getAttributeDisplayName","name":"getAttributeDisplayName","kind":"function","scope":"instance","inherits":"CustomEntity#getAttributeDisplayName","inherited":true,"description":"<p>Get the localized display name of custom attribute in the language of the current session.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getAttributeDisplayName('assignee'); // Get display name of attribute 'assignee' in current language\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getAttributeDisplayName('value');\rvar valueName2 = page.getAttributeDisplayName('cf.cplace.example.value');"],"returns":[{"type":{"names":["string"]},"description":"<p>Display name of attribute in current language. Will be null if the attribute is not found</p>"}],"meta":{"lineno":57,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":35,"level":0},{"id":"Group#get","longname":"Group#get","name":"get","kind":"function","scope":"instance","inherits":"CustomEntity#get","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.get('assignee'); // Get value of 'assignee' attribute. Will be null if not found or set\rif (assignee != null) {\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.get('value');\rvar valueName2 = page.get('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>The current value.</p>"}],"meta":{"lineno":77,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":36,"level":0},{"id":"Group#getOptional","longname":"Group#getOptional","name":"getOptional","kind":"function","scope":"instance","inherits":"CustomEntity#getOptional","inherited":true,"description":"<p>Get the current value of a given entity attribute.</p>\n<p>For single reference attributes with a <code>null</code> value, a {@link CustomEntity} object of the\ncorrect subtype is returned. As that object does not refer to an existing entity, {@link exists} will always\nreturn <code>false</code>, getter methods will always return <code>false</code>.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the internal name of the attribute. If there is an  prefix defined for the containing type this can also\nbe just the suffix.</p>","name":"internalName"}],"examples":["// page is a reference to a custom entity of type page\rvar assignee = page.getOptional(\"assignee\"); // Get value of 'assignee' attribute\rif (assignee.exists()) {                     // Check if assignee is set (i.e. exists)\r  // do something\r}\r\r// assume the configured prefix is 'cf.cplace.example' both calls will be equivalent:\rvar valueName  = page.getOptional('value');\rvar valueName2 = page.getOptional('cf.cplace.example.value');"],"returns":[{"type":{"names":["Object"]},"description":"<p>Current value of attribute, <code>null</code> if no type or attribute definition for that name is\nfound or a dummy page if the attribute is an unset single reference.</p>"}],"meta":{"lineno":103,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":37,"level":0},{"id":"Group#getBuiltinFeatureValue","longname":"Group#getBuiltinFeatureValue","name":"getBuiltinFeatureValue","kind":"function","scope":"instance","inherits":"CustomEntity#getBuiltinFeatureValue","inherited":true,"description":"<p>Get value of a builtin feature.</p>","memberof":"Group","params":[{"type":{"names":["string"]},"description":"<p>the name of the builtin feature to get from the entity.</p>","name":"featureName"}],"examples":["// page is a reference to a custom entity of type page\rvar createDate = page.getBuiltinFeatureValue('createdAt'); // Get creation date of page"],"returns":[{"type":{"names":["boolean","string","Date","number","ArrayLike.<CustomEntity>"]},"description":"<p>Current value or <code>null</code>\nif this object does not refer to an existing entity.</p>"}],"meta":{"lineno":117,"filename":"CustomEntity.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":38,"level":0},{"id":"cplace.log","longname":"cplace.log","name":"log","kind":"function","scope":"static","description":"<p>Logs a message.</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>the message to log</p>","name":"message"}],"examples":["cplace.log('A simple log message');"],"meta":{"lineno":15,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":6},{"id":"cplace.map","longname":"cplace.map","name":"map","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs a transformation operation on every item.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over containing items to transform</p>","name":"input"},{"type":{"names":["mappingFunction"]},"description":"<p>transformation function to be performed on each item.</p>","name":"callback"}],"examples":["var arr = [1, 2, 3, 4];\rvar arr2 = cplace.map(arr, function (i) {\r     return i*2;\r});\r// arr2 - [2, 4, 6, 8]"],"returns":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>An iterable list containing the transformed objects.</p>"}],"meta":{"lineno":31,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":7},{"id":"cplace.each","longname":"cplace.each","name":"each","kind":"function","scope":"static","description":"<p>Iterates over an array like object and performs an operation on every item.\nThe loop can be interrupted by returning <code>false</code> from the provided callback function.</p>","memberof":"cplace","params":[{"type":{"names":["ArrayLike.<*>"]},"description":"<p>object to iterate over.</p>","name":"input"},{"type":{"names":["iteratingFunction"]},"description":"<p>function to perform on each item.</p>","name":"callback"}],"examples":["var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r    cplace.log(i)\r});\r// logs - 1 3 4 5","var arr = [1, 3, 4, 5];\rcplace.each(arr, function (i) {\r     if(i % 2 === 0 ) {\r       return false;\r     }\r     cplace.log(i);\r});\r// logs - 1 3"],"meta":{"lineno":58,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":8},{"id":"cplace.actions","longname":"cplace.actions","name":"actions","kind":"function","scope":"static","description":"<p>Gets actions provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get actions for. If plugin name is omitted then actions provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformActions = cplace.actions();\rvar platformActions = cplace.actions('cf.cplace.platform');\r\rvar myPluginActions = cplace.actions('my.awesome.plugin');"],"returns":[{"type":{"names":["Actions"]},"description":"<p>Actions provided by the plugin</p>"}],"meta":{"lineno":73,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":9},{"id":"cplace.setLogName","longname":"cplace.setLogName","name":"setLogName","kind":"function","scope":"static","description":"<p>Set a name for subsequent log messages.\nlogName will be added to log messages to make it easier to find and filter logs</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"description":"<p>name to be used for log messages</p>","name":"logName"}],"meta":{"lineno":82,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":10},{"id":"cplace.error","longname":"cplace.error","name":"error","kind":"function","scope":"static","description":"<p>Log an error  message from cplaceJS script. Error message are also logged to log file. The logged messages are available from admin menu</p>","memberof":"cplace","params":[{"type":{"names":["*"]},"description":"<p>an object to be logged. Non-string objects are converted to string.</p>","name":"obj"}],"meta":{"lineno":89,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":11},{"id":"cplace.formatNumber","longname":"cplace.formatNumber","name":"formatNumber","kind":"function","scope":"static","description":"<p>Formats a number to the locale of the current session including decimal delimiters and floating point symbols.</p>\n<p>Formatting changes the type!\nThe result cannot be used for calculations any longer.</p>","memberof":"cplace","params":[{"type":{"names":["number"]},"description":"<p>number value to format</p>","name":"value"},{"type":{"names":["number"]},"optional":true,"description":"<p>target precision of the formatted number, this parameter is optional.</p>","name":"precision"}],"returns":[{"type":{"names":["string"]},"description":"<ul>\n<li>the formatted number as a string</li>\n</ul>"}],"meta":{"lineno":103,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":12},{"id":"cplace.utils","longname":"cplace.utils","name":"utils","kind":"function","scope":"static","description":"<p>Gets utilities provided by specified plugin</p>","memberof":"cplace","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>plugin to get utilities for. If plugin name is omitted then utilities provided by platform are returned.</p>","name":"pluginName"}],"examples":["var platformUtilities = cplace.utils();\rvar platformUtilities = cplace.utils('cf.cplace.platform');\r\rvar myPluginUtilities = cplace.utils('my.awesome.plugin');"],"returns":[{"type":{"names":["Utilities"]},"description":"<p>Utilities provided by the plugin</p>"}],"meta":{"lineno":118,"filename":"cplace.js","path":"/var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/allDocs/cf.cplace.platform/docs"},"order":13}]},"index":1,"first":false,"last":false},"index":0,"first":true,"last":true,"key":0},"index":0,"first":true,"last":true,"key":0},"loc":{"start":{"line":17,"column":0},"end":{"line":23,"column":10}}}
Docs generated in folder: /var/folders/kt/jlf5t4bj6kj8zgx7jh27n97m0000gn/T/cplaceJS-docs-builder/out
CplaceJS docs built successfully (00m01s)
